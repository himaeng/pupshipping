namespace org.pup.shipping.shipment

import org.pup.shipping.contract.Contract

/**
 * Enumeration
 * - User defined type
 *   - List of constant values that maybe assigned to a field as values
 *   - Data is validated against the enum values
 */

/**
 * The type of food being shipped
 */
enum ProductType {
  o BANANAS
  o APPLES
  o PEARS
  o PEACHES
  o COFFEE
}

/** 
 * The status of a shipment
 */
enum ShipmentStatus {
  o CREATED
  o IN_TRANSIT
  o ARRIVED
}

/** 
 * ทิศทั้ง 4
 */
enum CompassDirection {
  o N
  o S
  o E
  o W
}

/**
 * A shipment being tracked as an asset on the ledger
 */
asset Shipment identified by shipmentId {
  o String shipmentId             regex=/SHIP_[0-9][0-9][0-9]/
  o ProductType type
  o ShipmentStatus status         default="CREATED"
  o Long unitCount
  o String shipmentDescription    optional
  o TemperatureReading[] temperatureReadings  optional
  o GpsReading[] gpsReadings       optional
  --> Contract contract
  o ShipmentPacked shipmentPacked optional
  o ShipmentPickup shipmentPickup optional
  o ShipmentLoaded shipmentLoaded optional
  o ShipmentReceived shipmentReceived optional
}

/**
 * abstract transaction ของ shipment
 */
abstract transaction ShipmentTransaction {
  --> Shipment shipment
}

/**
 * transaction สำหรับการอ่านอุณหภูมิในตู้คอนเทนเนอร์ในช่วงขนส่ง
 */
transaction TemperatureReading extends ShipmentTransaction {
  o Double centigrade
}

/**
 *  พิกัด GPS ที่อ่านมาจากเครื่องอ่านภายในตู้คอนเทนเนอร์
 */
transaction GpsReading extends ShipmentTransaction {
  o String readingTime
  o String readingDate
  o String latitude
  o CompassDirection latitudeDir
  o String longitude
  o CompassDirection longitudeDir
}

/**
 * Notification ที่จะเกิดขึ้นเมื่อ importer ได้รับตู้คอนเทนเนอร์ 
 * เมื่อนั้น importer ควรจะชำระเงินค่าสินค้าให้ผู้ผลิตหรือ Grower 
 */
transaction ShipmentReceived extends ShipmentTransaction {
  o DateTime receivedDateTime optional
}

transaction ShipmentPacked extends ShipmentTransaction {
}
 
transaction ShipmentPickup extends ShipmentTransaction {
}
 
transaction ShipmentLoaded extends ShipmentTransaction {
}

/**
 * event รองรับ transaction ของ TemperatureReading
 */
event TemperatureRead {
  o String shipmentId
}

/**
 * event - เมื่ออุณหภูมิหลุดกรอบ
 */
event TemperatureThresholdEvent {
  o String message
  o Double temperature
  --> Shipment shipment
}
 
/**
 * event - เมื่อตู้คอนเทนเนอร์ถึงจุดหมายปลายทาง
 */
event ShipmentInPortEvent {
  o String message
  --> Shipment shipment
}

event ShipmentPackedEvent {
  o String message
  --> Shipment shipment
}
 
event ShipmentPickupEvent {
  o String message
  --> Shipment shipment
}
 
event ShipmentLoadedEvent {
  o String message
  --> Shipment shipment
}
 
event ShipmentReceivedEvent {
  o String message
  --> Shipment shipment
}